Compilation: OK
test: ft_reverse_parenthesis("one (ruof ((rht)ee) owt)")
=================================================================
==37581==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x603000001708 at pc 0x000107103c75 bp 0x7ffee8b45560 sp 0x7ffee8b44d20
WRITE of size 25 at 0x603000001708 thread T0
    #0 0x107103c74 in wrap_strcpy (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x40c74)
    #1 0x1070bc8af in ft_reverse_parenthesis szavarce.c:78
    #2 0x1070bb507 in assert_results main.c:18
    #3 0x1070bb66a in main main.c:32
    #4 0x7fff6ded82e4 in start (libdyld.dylib:x86_64+0x112e4)

0x603000001708 is located 0 bytes to the right of 24-byte region [0x6030000016f0,0x603000001708)
allocated by thread T0 here:
    #0 0x107108abd in wrap_malloc (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x45abd)
    #1 0x1070bc880 in ft_reverse_parenthesis szavarce.c:76
    #2 0x1070bb507 in assert_results main.c:18
    #3 0x1070bb66a in main main.c:32
    #4 0x7fff6ded82e4 in start (libdyld.dylib:x86_64+0x112e4)

SUMMARY: AddressSanitizer: heap-buffer-overflow (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x40c74) in wrap_strcpy
Shadow bytes around the buggy address:
  0x1c0600000290: 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00 00 00
  0x1c06000002a0: fa fa 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00
  0x1c06000002b0: 00 00 fa fa 00 00 00 00 fa fa 00 00 00 00 fa fa
  0x1c06000002c0: 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00 00 00
  0x1c06000002d0: fa fa 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00
=>0x1c06000002e0: 00[fa]fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c06000002f0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c0600000300: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c0600000310: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c0600000320: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c0600000330: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==37581==ABORTING
Exec: KO
