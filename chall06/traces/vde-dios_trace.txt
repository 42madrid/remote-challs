Compilation: OK
test: ft_check_mate("......
......
......
......")
expected_output: 1
user_output: 1
test: ft_check_mate("......
...K..
...P..
..K...")
expected_output: 1
user_output: 1
test: ft_check_mate("K.....
......
......
......
......
......")
expected_output: 1
user_output: 1
test: ft_check_mate("K.....
......
......
......")
expected_output: 1
user_output: 1
test: ft_check_mate("Z.....
......
......
......
......
......")
expected_output: 1
user_output: 1
test: ft_check_mate("Z.....
......
......
......")
expected_output: 1
user_output: 1
test: ft_check_mate("Q.....
......
......
......
......
......")
AddressSanitizer:DEADLYSIGNAL
=================================================================
==92872==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fff7329c1fc bp 0x7ffee36a6ba0 sp 0x7ffee36a6ba0 T0)
==92872==The signal is caused by a READ memory access.
==92872==Hint: address points to the zero page.
    #0 0x7fff7329c1fb in _platform_strchr$VARIANT$Haswell (libsystem_platform.dylib:x86_64+0x21fb)
    #1 0x10c57fcf3 in wrap_strchr (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x19cf3)
    #2 0x10c55939a in ft_check_format vde-dios.c:35
    #3 0x10c55a719 in ft_check_mate vde-dios.c:93
    #4 0x10c558dea in assert_results main.c:11
    #5 0x10c558f15 in main main.c:24
    #6 0x7fff7309d2e4 in start (libdyld.dylib:x86_64+0x112e4)

==92872==Register values:
rax = 0x000000010d1fb7c4  rbx = 0x00007ffee36a7500  rcx = 0x0000000000000001  rdx = 0x0000000000000000  
rdi = 0x0000000000000000  rsi = 0x000000000000004b  rbp = 0x00007ffee36a6ba0  rsp = 0x00007ffee36a6ba0  
 r8 = 0x00001fffdc6d4e8c   r9 = 0x000000010c55afa0  r10 = 0x000000010c55afa0  r11 = 0x00007fff9d268570  
r12 = 0x0000000000000000  r13 = 0x0000000000000001  r14 = 0x0000000000000000  r15 = 0x0000000000000000  
AddressSanitizer can not provide additional info.
SUMMARY: AddressSanitizer: SEGV (libsystem_platform.dylib:x86_64+0x21fb) in _platform_strchr$VARIANT$Haswell
==92872==ABORTING
Exec: KO
